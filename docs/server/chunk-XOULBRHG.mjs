import './polyfills.server.mjs';
var u=Object.defineProperty,v=Object.defineProperties;var w=Object.getOwnPropertyDescriptors;var m=Object.getOwnPropertySymbols,x=Object.getPrototypeOf,q=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable,y=Reflect.get;var l=(b,a)=>(a=Symbol[b])?a:Symbol.for("Symbol."+b),z=b=>{throw TypeError(b)};var n=(b,a,c)=>a in b?u(b,a,{enumerable:!0,configurable:!0,writable:!0,value:c}):b[a]=c,A=(b,a)=>{for(var c in a||={})q.call(a,c)&&n(b,c,a[c]);if(m)for(var c of m(a))r.call(a,c)&&n(b,c,a[c]);return b},B=(b,a)=>v(b,w(a));var C=(b=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(b,{get:(a,c)=>(typeof require<"u"?require:a)[c]}):b)(function(b){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+b+'" is not supported')});var D=(b,a)=>{var c={};for(var d in b)q.call(b,d)&&a.indexOf(d)<0&&(c[d]=b[d]);if(b!=null&&m)for(var d of m(b))a.indexOf(d)<0&&r.call(b,d)&&(c[d]=b[d]);return c};var E=(b,a)=>()=>(a||b((a={exports:{}}).exports,a),a.exports);var F=(b,a,c)=>n(b,typeof a!="symbol"?a+"":a,c);var G=(b,a,c)=>y(x(b),c,a);var H=(b,a,c)=>new Promise((d,g)=>{var e=f=>{try{i(c.next(f))}catch(j){g(j)}},h=f=>{try{i(c.throw(f))}catch(j){g(j)}},i=f=>f.done?d(f.value):Promise.resolve(f.value).then(e,h);i((c=c.apply(b,a)).next())}),s=function(b,a){this[0]=b,this[1]=a},I=(b,a,c)=>{var d=(h,i,f,j)=>{try{var o=c[h](i),p=(i=o.value)instanceof s,t=o.done;Promise.resolve(p?i[0]:i).then(k=>p?d(h==="return"?h:"next",i[1]?{done:k.done,value:k.value}:k,f,j):f({value:k,done:t})).catch(k=>d("throw",k,f,j))}catch(k){j(k)}},g=h=>e[h]=i=>new Promise((f,j)=>d(h,i,f,j)),e={};return c=c.apply(b,a),e[l("asyncIterator")]=()=>e,g("next"),g("throw"),g("return"),e},J=b=>{var a=b[l("asyncIterator")],c=!1,d,g={};return a==null?(a=b[l("iterator")](),d=e=>g[e]=h=>a[e](h)):(a=a.call(b),d=e=>g[e]=h=>{if(c){if(c=!1,e==="throw")throw h;return h}return c=!0,{done:!1,value:new s(new Promise(i=>{var f=a[e](h);f instanceof Object||z("Object expected"),i(f)}),1)}}),g[l("iterator")]=()=>g,d("next"),"throw"in a?d("throw"):g.throw=e=>{throw e},"return"in a&&d("return"),g},K=(b,a,c)=>(a=b[l("asyncIterator")])?a.call(b):(b=b[l("iterator")](),a={},c=(d,g)=>(g=b[d])&&(a[d]=e=>new Promise((h,i,f)=>(e=g.call(b,e),f=e.done,Promise.resolve(e.value).then(j=>h({value:j,done:f}),i)))),c("next"),c("return"),a);export{A as a,B as b,C as c,D as d,E as e,F as f,G as g,H as h,s as i,I as j,J as k,K as l};
